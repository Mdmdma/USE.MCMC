[{"path":"~ https://danddr.github.io/USE/articles/USE_vignette.html","id":"create-virtual-species","dir":"Articles","previous_headings":"","what":"1. Create Virtual Species","title":"USE vignette","text":"First, download bioclimatic variables WorldClim crop European extent. , generate virtual species using bioclimatic variables downloaded previous step. details methodology used create virtual species, see vignette virtualspecies R package.  Generate presence-data set.","code":"Worldclim <- geodata::worldclim_global(var='bio', res=10, path=getwd())  envData <- terra::crop(Worldclim, terra::ext(-12, 25, 36, 60)) #create virtual species myRandNum <- sample(1:19,size=5, replace = FALSE) envData <- envData[[myRandNum]] set.seed(123) random.sp <- virtualspecies::generateRandomSp(raster::stack(envData),                                                convert.to.PA = FALSE,                                                species.type = \"additive\",                                               realistic.sp = TRUE,                                                plot = FALSE) #reclassify suitability raster using a probability conversion rule new.pres <- virtualspecies::convertToPA(x=random.sp,                        beta=0.55,                       alpha = -0.05, plot = FALSE) #Sample true occurrences presence.points <- virtualspecies::sampleOccurrences(new.pres,                                      n = 300, # The number of points to sample                                      type = \"presence-absence\",                                      sample.prevalence = 0.6,                                      detection.probability = 1,                                      correct.by.suitability = TRUE,                                      plot = TRUE) myPres <- presence.points$sample.points[which(presence.points$sample.points$Observed==1), c( \"x\", \"y\",  \"Observed\")] myPres <- st_as_sf(myPres, coords=c(\"x\", \"y\"), crs=4326)"},{"path":"~ https://danddr.github.io/USE/articles/USE_vignette.html","id":"generating-the-environmental-space","dir":"Articles","previous_headings":"","what":"2. Generating the environmental space","title":"USE vignette","text":"First, environmental space generated performing principal component analysis (PCA) raster stack includes selected spatial environmental layers (precipitation temperature). practice, PCA operates values environmental conditions linked pixels spatial environmental layers. Next, first two principal components extracted PCA create two-dimensional environmental space (’s important note current version USE supports uniform sampling two dimensions). two principal components obtained, new “spatial object” created, PC-scores (represent projection environmental pixels within two-dimensional space) serving object’s coordinates. object scanned systematically gather pseudo-absences. ’s worth mentioning , stage, PC-scores, except associated presence virtual species, considered potential pseudo-absences. function USE::optimRes can used find optimal resolution (.e., one providing best trade-fine resolution overfitting environmental space) sampling grid used collect pseudo-absences within environmental space (see ).","code":"rpc <- rastPCA(envData, stand = TRUE) dt <- na.omit(as.data.frame(rpc$PCs[[c(\"PC1\", \"PC2\")]], xy = TRUE)) dt <- sf::st_as_sf(dt, coords = c(\"PC1\", \"PC2\")) myRes <- USE::optimRes(sdf=dt,                     grid.res=c(1:10),                     perc.thr = 20,                     showOpt = TRUE,                      cr=5) myRes$Opt_res ## [1] 5"},{"path":"~ https://danddr.github.io/USE/articles/USE_vignette.html","id":"uniform-sampling-of-the-environmental-space","dir":"Articles","previous_headings":"","what":"3. Uniform sampling of the environmental space","title":"USE vignette","text":"provide clear example, function USE::uniformSampling utilized systematically search environmental space gather specific number observations cell within sampling grid. resolution grid determined beforehand using USE::optimRes function. ’s important note given example, presences pseudo-absences virtual species potentially sampled USE::uniformSampling function, main purpose demonstrate operation. subsequent section, USE::uniformSampling function internally called USE::paSampling, exclusively focusing sampling pseudo-absences. look observations sampled using USE::uniformSampling Visualizing coordinates (PC-scores) observations sampled environmental space using USE::uniformSampling demonstrates effectiveness uniformly sampling environmental space. approach enables collection data accurately represents entire range environmental gradients. Moreover, mitigates influence “sample location bias,” arises randomly sampling observations geographical space often results overrepresentation frequently encountered environmental conditions. Uniform sampling mitigates adverse impact sample location bias, leading comprehensive understanding environmental variations.","code":"myObs <- USE::uniformSampling(sdf=dt,                                grid.res=myRes$Opt_res,                               n.tr = 5,                               sub.ts = TRUE,                               n.ts = 2,                               plot_proc = FALSE) head(myObs$obs.tr) ## Simple feature collection with 6 features and 3 fields ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: -2.51107 ymin: -3.010072 xmax: -0.3051739 ymax: -2.724758 ## CRS:           NA ##               x        y    ID                     geometry ## 21228 -3.750000 43.41667 21228   POINT (-2.51107 -2.732245) ## 21229 -3.583333 43.41667 21229  POINT (-2.380254 -2.724758) ## 2174  -5.083333 58.25000  2174 POINT (-0.6214643 -2.803959) ## 8156  -6.750000 53.58333  8156  POINT (-1.023063 -2.778233) ## 7519  -5.916667 54.08333  7519   POINT (-0.52659 -2.733742) ## 4958  -4.750000 56.08333  4958 POINT (-0.3051739 -3.010072) env_pca <- c(rpc$PCs$PC1, rpc$PCs$PC2) env_pca <- na.omit(as.data.frame(env_pca))  ggplot(env_pca, aes(x=PC1))+   geom_density(aes(color=\"Environment\"), size=1 )+   geom_density(data=data.frame(st_coordinates(myObs$obs.tr)),                 aes(x=X,  color=\"Uniform\"), size=1)+   scale_color_manual(name=NULL,                       values=c('Environment'='#1E88E5', 'Uniform'='#D81B60'))+        labs(y=\"Density of PC-scores\")+   xlim(-5,3)+ ylim(0,1)+   theme_classic()+   theme(legend.pos=\"bottom\",           text = element_text(size=14),           legend.text=element_text(size=12)) ggplot(env_pca, aes(x=PC2))+   geom_density(aes(color=\"Environment\"), size=1 )+   geom_density(data=data.frame(st_coordinates(myObs$obs.tr)),                 aes(x=Y,  color=\"Uniform\"), size=1)+   scale_color_manual(name=NULL,                       values=c('Environment'='#1E88E5', 'Uniform'='#D81B60'))+        labs(y=\"Density of PC-scores\")+   xlim(-5,3)+ ylim(0,1)+   theme_classic()+   theme(legend.pos=\"bottom\",           text = element_text(size=14),           legend.text=element_text(size=12))"},{"path":"~ https://danddr.github.io/USE/articles/USE_vignette.html","id":"uniform-sampling-of-the-pseudo-absences-within-the-environmental-space","dir":"Articles","previous_headings":"","what":"4. Uniform sampling of the pseudo-absences within the environmental space","title":"USE vignette","text":"USE::paSampling function performs uniform sampling pseudo-absences within environmental space 2-step procedure: First, kernel-based filter used exclude environmental space observations associated environmental conditions likely suitable species. identify conditions, kernel-based filter uses information environmental conditions species present (.e., presence locations). nutshell, kernel density estimation used derive probability density function observations associated presence virtual species within 2-dimensional environmental space. observations associated probability equal greater given threshold (default set 0.75 USE::paSampling) deemed feature suitable environmental conditions species. observations within space characterized combination environmental conditions therefore excluded subsequent step, namely uniform sampling pseudo-absences, reduce number false-absences introduced dataset used train (test) species distribution model. aim, convex hull built delimit areas identified kernel-filter potentially featuring suitable conditions virtual species, observations (.e., PC-scores) within convex hull excluded environmental space; Second, environmental space systematically scanned uniformly sample remaining observations, specifically located outside convex hull established previous step. sampled observations constitute set pseudo-absences employed training testing species distribution model. second step carried USE::paSampling function (internally called USE::paSampling). Pseudo-absences randomly sampled within cell sampling grid mentioned previous section. Visualizing coordinates (PC-scores) pseudo-absences sampled environmental space using USE::paSampling   Visualizing geographic coordinates pseudo-absences sampled environmental space using USE::paSampling","code":"myGrid.psAbs <- USE::paSampling(env.rast=envData,                                 pres=myPres,                                 thres=0.75,                                 H=NULL,                                 grid.res=as.numeric(myRes$Opt_res),                                 n.tr = 5,                                 prev=0.3,                                 sub.ts=TRUE,                                 n.ts=5,                                 plot_proc=FALSE,                                 verbose=FALSE) ggplot(env_pca, aes(x=PC1))+   geom_density(aes(color=\"Environment\"), size=1 )+   geom_density(data=data.frame(st_coordinates(myGrid.psAbs$obs.tr)),                 aes(x=X,  color=\"Uniform\"), size=1)+   geom_density(data=terra::extract(c(rpc$PCs$PC1, rpc$PCs$PC2), myPres, df=TRUE),                 aes(x=PC1, color=\"Presence\"), size=1 )+   scale_color_manual(name=NULL,                       values=c('Environment'='#1E88E5', 'Uniform'='#D81B60', \"Presence\"=\"black\"))+        labs(y=\"Density of PC-scores\")+   xlim(-5,3)+ ylim(0,1)+   theme_classic()+   theme(legend.pos=\"bottom\",           text = element_text(size=14),           legend.text=element_text(size=12)) ggplot(env_pca, aes(x=PC2))+   geom_density(aes(color=\"Environment\"), size=1 )+   geom_density(data=data.frame(st_coordinates(myGrid.psAbs$obs.tr)),                 aes(x=Y,  color=\"Uniform\"), size=1)+   geom_density(data=terra::extract(c(rpc$PCs$PC1, rpc$PCs$PC2), myPres, df=TRUE),                 aes(x=PC2, color=\"Presence\"), size=1 )+   scale_color_manual(name=NULL,                       values=c('Environment'='#1E88E5', 'Uniform'='#D81B60', \"Presence\"=\"black\"))+        labs(y=\"Density of PC-scores\")+   xlim(-5,3)+ ylim(0,1)+   theme_classic()+   theme(legend.pos=\"bottom\",           text = element_text(size=14),           legend.text=element_text(size=12)) ggplot()+   stars::geom_stars(data = stars::st_as_stars(new.pres$pa.raster), alpha = 0.5 )+   scale_fill_manual(values =viridis::viridis(2),                     na.value = \"transparent\",                     labels = c(\"Absence\", \"Presence\", \"\"))+   geom_sf(data=myPres,            aes(color= \"Presences\"),            alpha=1, size=2, shape= 19)+   geom_sf(data=st_as_sf(st_drop_geometry(myGrid.psAbs$obs.tr), coords = c(\"x\",\"y\"), crs=4326),            aes(color=\"Pseudo-absences\"),            alpha=0.8, size=2, shape = 19 )+     scale_colour_manual(name=NULL,                         values=c('Presences'='steelblue', 'Pseudo-absences'='#A41616'))+   labs(x=\"Longitude\",         y=\"Latitude\",         fill=\"Virtual species\")+   theme_light()+   theme(legend.pos=\"bottom\",           legend.background=element_blank(),         legend.box=\"vertical\",         panel.grid = element_blank(),         text = element_text(size=14),           legend.text=element_text(size=14),          aspect.ratio = 1,          panel.spacing.y = unit(2, \"lines\"))"},{"path":"~ https://danddr.github.io/USE/articles/USE_vignette.html","id":"effect-of-the-kernel-density-threshold-on-the-environmental-sub-space-sampled-to-collect-pseudo-absences","dir":"Articles","previous_headings":"","what":"5. Effect of the kernel density threshold on the environmental sub-space sampled to collect pseudo-absences","title":"USE vignette","text":"Knowing USE::paSampling operates evidences importance carefully selecting meaningful threshold kernel density estimation delimit environmental sub-space uniform sampling. However, visualizing impact different threshold selections can challenging. address , incorporated USE::thresh.inspect function. function generates plots depict entire environmental space alongside portion excluded based specific kernel density threshold. experimenting various threshold values, users can observe selection affects delineated area collecting pseudo-absences. general, opting lower threshold value leads exclusion larger portion environmental space. allowing users freely determine threshold value kernel-based filter, USE enables handling pseudo-absence sampling diverse ecological scenarios, involving generalist specialist species sink populations.","code":"USE::thresh.inspect(env.rast=envData,                     pres=myPres,                     thres=c(0.1, 0.25, 0.5, 0.75, 0.9),                     H=NULL                     )"},{"path":"~ https://danddr.github.io/USE/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniele Da Re. Author, maintainer. Enrico Tordoni. Author. Manuele Bazzichetto. Author.","code":""},{"path":"~ https://danddr.github.io/USE/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Da Re D, Tordoni E, Lenoir J, Lembrechts J, Vanwambeke S, Rocchini D, Bazzichetto M (2023). “USE : uniformly sampling pseudo-absences within environmental space applications habitat suitability models.” EcoEvoRxiv. https://doi.org/10.32942/X2XS32.","code":"@Article{,   title = {USE it: uniformly sampling pseudo-absences within the environmental space for applications in habitat suitability models},   author = {Daniele {Da Re} and Enrico Tordoni and Jonathan Lenoir and Jonas Lembrechts and Sophie Vanwambeke and Duccio Rocchini and Manuele Bazzichetto},   journal = {EcoEvoRxiv},   year = {2023},   url = {https://doi.org/10.32942/X2XS32}, }"},{"path":"~ https://danddr.github.io/USE/index.html","id":"use-uniform-sampling-of-the-environmental-space","dir":"","previous_headings":"","what":"Uniform Sampling of the Environmental space","title":"Uniform Sampling of the Environmental space","text":"USE R package offers collection functions enable uniform sampling environmental space. specifically developed assist species distribution modellers gathering ecologically relevant pseudo-absences uniformly sampling environmental space.","code":""},{"path":"~ https://danddr.github.io/USE/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Uniform Sampling of the Environmental space","text":"development version USE can installed running code :","code":"# Install the released version from CRAN # install.packages(\"USE\") #not available yet # Or the development version from GitHub: # install.packages(\"devtools\") devtools::install_github(\"danddr/USE\")"},{"path":[]},{"path":"~ https://danddr.github.io/USE/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Uniform Sampling of the Environmental space","text":"Examples showing implement USE species distribution modelling provided dedicated vignette, can also found https://github.com/danddr/USE_paper/tree/main/Example.","code":""},{"path":"~ https://danddr.github.io/USE/reference/Worldclim_tmp.html","id":null,"dir":"Reference","previous_headings":"","what":"A subset of WorldClim bioclimatic variables — Worldclim_tmp","title":"A subset of WorldClim bioclimatic variables — Worldclim_tmp","text":"subset WorldClim bioclimatic variables cropped Central Western Europe.","code":""},{"path":"~ https://danddr.github.io/USE/reference/Worldclim_tmp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A subset of WorldClim bioclimatic variables — Worldclim_tmp","text":"","code":"data(Worldclim_tmp)"},{"path":"~ https://danddr.github.io/USE/reference/Worldclim_tmp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A subset of WorldClim bioclimatic variables — Worldclim_tmp","text":"data frame obtained SpatRaster 1080 rows, 2160 columns, 5 layers, namely: wc2.1_10m_bio_4, wc2.1_10m_bio_3, wc2.1_10m_bio_14, wc2.1_10m_bio_9, wc2.1_10m_bio_15.","code":""},{"path":"~ https://danddr.github.io/USE/reference/Worldclim_tmp.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A subset of WorldClim bioclimatic variables — Worldclim_tmp","text":"geodata::worldclim_global(var='bio', res=10, path=getwd())[[c(4,  3, 14,  9, 15)]]","code":""},{"path":"~ https://danddr.github.io/USE/reference/optimRes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get optimal resolution of the sampling grid — optimRes","title":"Get optimal resolution of the sampling grid — optimRes","text":"optimRes identifies optimal resolution sampling grid used perform uniform environmental sampling. find optimal resolution, set candidate resolutions must provided. candidate resolution, optimRes calculates metric summarizes average squared Euclidean distance observations (PC-scores first two principal components) within cell centroid convex hull encompassing points. important note centroid specific cell.","code":""},{"path":"~ https://danddr.github.io/USE/reference/optimRes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get optimal resolution of the sampling grid — optimRes","text":"","code":"optimRes(sdf, grid.res, perc.thr = 10, cr = 1, showOpt = TRUE)"},{"path":"~ https://danddr.github.io/USE/reference/optimRes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get optimal resolution of the sampling grid — optimRes","text":"sdf sf object point geometry given PC-scores values grid.res (integer) vector resolutions tested, .e seq(1,100, =1) perc.thr rate change (expressed percentage) function minimized selecting optimal resolution. cr (integer) number cores parallel computing. default cluster type PSOCK. showOpt (logical) plot result.","code":""},{"path":"~ https://danddr.github.io/USE/reference/optimRes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get optimal resolution of the sampling grid — optimRes","text":"returns list : ) matrix reporting values function minimized, along corresponding resolution; ii) optimal resolution.","code":""},{"path":"~ https://danddr.github.io/USE/reference/optimRes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get optimal resolution of the sampling grid — optimRes","text":"metric compared across different sampling grids increasing resolution, .e., increasing number cells. best resolution selected based trade-number cells average distance among observations within cell. Essentially, goal find finest resolution sampling grid enables uniform sampling environmental space without overfitting . default, optimal resolution determined one average distance among observations cell-specific centroids reduced 10%. However, users flexibility adjust setting according needs. optimRes function returns list two elements. first element matrix reports metric calculated sampling grid corresponding resolution. second element selected optimal resolution. Additionally, function provides plot displays metric values resolution. allows users visually analyze relationship resolution associated metric, thereby empowering make informed decision selecting resolution. case function returns NA optimal resolution: ) increase range grid.res, ii) increase perc.thr.","code":""},{"path":"~ https://danddr.github.io/USE/reference/paSampling.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling pseudo-absences for the training and testing datasets. — paSampling","title":"Sampling pseudo-absences for the training and testing datasets. — paSampling","text":"paSampling performs two-step procedure uniformly sampling pseudo-absences within environmental space. initial step, kernel-based filter utilized determine subset environmental space subsequently sampled. kernel-based filter calculates probability function based presence observations, enabling identification areas within environmental space likely exhibit suitable conditions species. achieve , probability threshold value utilized assign observations corresponding portion environmental space. areas, deemed suitable environmental conditions, excluded subsequent uniform sampling process conducted second step using uniformSampling function, internally called. bandwidth kernel can automatically estimated presence observations directly set user, providing flexibility determining scope precision filter.","code":""},{"path":"~ https://danddr.github.io/USE/reference/paSampling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling pseudo-absences for the training and testing datasets. — paSampling","text":"","code":"paSampling(   env.rast = NULL,   pres = NULL,   thres = 0.75,   H = NULL,   grid.res = NULL,   n.tr = 5,   sub.ts = FALSE,   n.ts = 5,   prev = NULL,   plot_proc = FALSE,   verbose = FALSE )"},{"path":"~ https://danddr.github.io/USE/reference/paSampling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling pseudo-absences for the training and testing datasets. — paSampling","text":"env.rast RasterStack, RasterBrick SpatRaster object comprising variables describing environmental space. pres SpatialPointsDataframe, SpatVector sf object including presence-observations species interest. thres (double) value identifies quantile value used specify boundary kernel density estimate (default thres=0.75 ). Thus, probability values higher threshold indicate portions multivariate space likely associated presence points. H kernel bandwidth (.e., width kernel density function defines shape) excluding portion environmental space associated environmental conditions likely suitable species. can either defined user automatically estimated paSampling via ks::Hpi. grid.res (integer) resolution sampling grid. resolution can arbitrarily selected defined using optimRes function. n.tr (integer) number pseudo-absences training dataset sample cell sampling grid sub.ts (logical) sample validation pseudo-absences n.ts (integer; optional) number pseudo-absences testing dataset sample cell sampling grid. sub.ts argument must TRUE. prev (double) prevalence value specified instead n.tr n.ts plot_proc (logical) plot progress sampling, default FALSE verbose (logical) Print verbose","code":""},{"path":"~ https://danddr.github.io/USE/reference/paSampling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sampling pseudo-absences for the training and testing datasets. — paSampling","text":"sf object coordinates pseudo-absences geographical environmental space.","code":""},{"path":"~ https://danddr.github.io/USE/reference/paSampling.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sampling pseudo-absences for the training and testing datasets. — paSampling","text":"designed species distribution models mind, paSampling allows collectively sampling pseudo-absences training testing dataset (optional). cases, user must provide number observations sampled cell sampling grid (n.tr: points training dataset; n.ts: points testing dataset). Note optimal resolution sampling grid can found using optimRes function. Also, note number pseudo-absences eventually sampled cell internally-called uniformSampling function depends spatial configuration observations within environmental space. Indeed, cases cells sampling grid empty (.e., boundary environmental space). reason, number pseudo-absences returned paSampling likely lower product number cells sampling gird n.tr(n.ts).","code":""},{"path":"~ https://danddr.github.io/USE/reference/pca_predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict pca — pca_predict","title":"Predict pca — pca_predict","text":"Predict pca","code":""},{"path":"~ https://danddr.github.io/USE/reference/pca_predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict pca — pca_predict","text":"","code":"pca_predict(data, model, nPC)"},{"path":"~ https://danddr.github.io/USE/reference/pca_predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict pca — pca_predict","text":"data RasterStack, RasterBrick SpatRaster object comprising variables describing environmental space. model princomp object. nPC Integer. Number PCA components return.","code":""},{"path":"~ https://danddr.github.io/USE/reference/rastPCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Principal Component Analysis for Rasters — rastPCA","title":"Principal Component Analysis for Rasters — rastPCA","text":"rastPCA function calculates principal component analysis  (PCA) SpatRaster, RasterBrick, RasterStack objects returns SpatRaster multiple layers representing PCA components. Internally, rastPCA utilizes princomp function R-mode PCA analysis. covariance matrix computed using observations within provided SpatRaster object, describes environmental conditions. covariance matrix obtained subsequently utilized input princomp function, conducts PCA. resulting PCA components used generate final SpatRaster, consisting multiple layers represent PCA components.","code":""},{"path":"~ https://danddr.github.io/USE/reference/rastPCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Principal Component Analysis for Rasters — rastPCA","text":"","code":"rastPCA(env.rast, nPC = NULL, naMask = TRUE, stand = FALSE)"},{"path":"~ https://danddr.github.io/USE/reference/rastPCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Principal Component Analysis for Rasters — rastPCA","text":"env.rast RasterStack, RasterBrick SpatRaster object comprising variables describing environmental space. nPC Integer. Number PCA components return. naMask Logical. Masks pixels least one NA (default TRUE recommended introduces slow-. stand Logical. TRUE, perform standardized PCA. Corresponds centered scaled input image. usually beneficial equal weighting layers. (FALSE default)","code":""},{"path":"~ https://danddr.github.io/USE/reference/rastPCA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Principal Component Analysis for Rasters — rastPCA","text":"Returns named list containing PCA model object ($pca) SpatRaster principal component layers ($PCs).","code":""},{"path":"~ https://danddr.github.io/USE/reference/rastPCA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Principal Component Analysis for Rasters — rastPCA","text":"Pixels missing values one bands set NA. built-check pixels can lead slow-rastPCA. However, make sure know beforehand pixels either valid values NAs throughout layers can disable check setting naMask=FALSE speeds computation. Standardized PCA (stand=TRUE) can useful imagery bands different dynamic ranges combined. case, correlation matrix computed instead covariance matrix, effect using normalised bands unit variance.","code":""},{"path":[]},{"path":"~ https://danddr.github.io/USE/reference/thresh.inspect.html","id":null,"dir":"Reference","previous_headings":"","what":"Inspect the effect of the kernel threshold parameter on the environmental space partitioning — thresh.inspect","title":"Inspect the effect of the kernel threshold parameter on the environmental space partitioning — thresh.inspect","text":"thresh.inspect function allows pre-inspection impact selecting specific threshold kernel-based filter exclusion environmental space subsequent uniform sampling pseudo-absences process (see paSampling). providing range threshold values, function generates plot illustrates entire environmental space, including portion delineated kernel-based filter associated convex-hull. plot helps visualize areas excluded uniform sampling pseudo-absences. functionality proves particularly valuable determining meaningful threshold kernel-based filter specific ecological scenarios. instance, dealing sink populations, selecting appropriate threshold enables exclusion environmental space regions species present, conditions unsuitable. allows accurate sampling pseudo-absences, considering unique requirements different ecological contexts.","code":""},{"path":"~ https://danddr.github.io/USE/reference/thresh.inspect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inspect the effect of the kernel threshold parameter on the environmental space partitioning — thresh.inspect","text":"","code":"thresh.inspect(env.rast, pres = NULL, thres = 0.75, H = NULL)"},{"path":"~ https://danddr.github.io/USE/reference/thresh.inspect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inspect the effect of the kernel threshold parameter on the environmental space partitioning — thresh.inspect","text":"env.rast RasterStack, RasterBrick SpatRaster object comprising variables describing environmental space. pres SpatialPointsDataframe, SpatVector sf object including presence-observations species interest. thres (double) value vector values identifies quantile value used specify boundary kernel density estimate (default thres=0.75 ). Thus, probability values higher threshold indicate portions multivariate space likely associated presence points. H kernel bandwidth (.e., width kernel density function defines shape) excluding portion environmental space associated environmental conditions likely suitable species. can either defined user automatically estimated paSampling via ks::Hpi.","code":""},{"path":"~ https://danddr.github.io/USE/reference/thresh.inspect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inspect the effect of the kernel threshold parameter on the environmental space partitioning — thresh.inspect","text":"ggplot2 object showing environmental space partitioned accordingly selected thres values.","code":""},{"path":"~ https://danddr.github.io/USE/reference/uniformSampling.html","id":null,"dir":"Reference","previous_headings":"","what":"Uniform sampling of the environmental space — uniformSampling","title":"Uniform sampling of the environmental space — uniformSampling","text":"uniformSampling performs uniform sampling observations within environmental space. Note uniformSampling can generally used sample observations (necessarily associated species occurrence data) within bi-dimensional spaces (e.g., vegetation plots). designed species distribution models mind, uniformSampling allows collectively sampling observations training testing dataset (optional). cases, user must provide number observations sampled cell sampling grid (n.tr: points training dataset; n.ts: points testing dataset). Note optimal resolution sampling grid can found using optimRes function.","code":""},{"path":"~ https://danddr.github.io/USE/reference/uniformSampling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uniform sampling of the environmental space — uniformSampling","text":"","code":"uniformSampling(   sdf,   grid.res,   n.tr = 5,   n.prev = NULL,   sub.ts = FALSE,   n.ts = 5,   plot_proc = FALSE,   verbose = FALSE )"},{"path":"~ https://danddr.github.io/USE/reference/uniformSampling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uniform sampling of the environmental space — uniformSampling","text":"sdf sf object point geometry given PC-scores values grid.res (integer) resolution sampling grid. resolution can arbitrarily selected defined using optimRes() function. n.tr (integer; optional) number expected points given certain prevalence threshold training dataset. n.prev (double) sample prevalence sub.ts (logical) sample validation points n.ts (integer; optional) number  points testing dataset sample cell sampling grid. sub.ts argument must TRUE. plot_proc (logical) plot progress sampling verbose (logical) Print verbose","code":""},{"path":"~ https://danddr.github.io/USE/reference/uniformSampling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uniform sampling of the environmental space — uniformSampling","text":"sf object coordinates sampled points geographical environmental space","code":""},{"path":"~ https://danddr.github.io/USE/news/index.html","id":"use-011","dir":"Changelog","previous_headings":"","what":"USE 0.1.1","title":"USE 0.1.1","text":"Adding thresh.inspect function investigate effect kernel threshold partition environmental space.","code":""},{"path":"~ https://danddr.github.io/USE/news/index.html","id":"use-010","dir":"Changelog","previous_headings":"","what":"USE 0.1.0","title":"USE 0.1.0","text":"Changing filter presences applied kernel density: USE v0.0.0.9000, kernel density computed using pixels whole environmental space filter applied PC-scores associated presences. new version, kernel density computed environmental space associated presence observations. Adding rastPCA function compute PCA SpatRaster Raster objects. Dependency RSToolbox removed","code":""},{"path":"~ https://danddr.github.io/USE/news/index.html","id":"use-0009000","dir":"Changelog","previous_headings":"","what":"USE 0.0.0.9000","title":"USE 0.0.0.9000","text":"First release","code":""}]
