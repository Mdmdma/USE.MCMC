[{"path":"~ https://danddr.github.io/USE/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniele Da Re. Author, maintainer. Enrico Tordoni. Author. Manuele Bazzichetto. Author.","code":""},{"path":"~ https://danddr.github.io/USE/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Da Re D, Tordoni E, Bazzichetto M (2023). USE: Uniform Sampling Environmental space. R package version 0.0.0.9000.","code":"@Manual{,   title = {USE: Uniform Sampling of the Environmental space},   author = {Daniele {Da Re} and Enrico Tordoni and Manuele Bazzichetto},   year = {2023},   note = {R package version 0.0.0.9000}, }"},{"path":"~ https://danddr.github.io/USE/index.html","id":"use-uniform-sampling-of-the-environmental-space","dir":"","previous_headings":"","what":"Uniform Sampling of the Environmental space","title":"Uniform Sampling of the Environmental space","text":"R package perform uniform sampling environmental space goal USE perform uniform sampling environmental space","code":""},{"path":"~ https://danddr.github.io/USE/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Uniform Sampling of the Environmental space","text":"can install development version USE like :","code":"# Install the released version from CRAN # install.packages(\"USE\") #not available yet # Or the development version from GitHub: # install.packages(\"devtools\") devtools::install_github(\"danddr/USE\")"},{"path":"~ https://danddr.github.io/USE/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Uniform Sampling of the Environmental space","text":"","code":"## basic example code"},{"path":"~ https://danddr.github.io/USE/reference/optimRes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get optimal resolution of the sampling grid — optimRes","title":"Get optimal resolution of the sampling grid — optimRes","text":"optimRes identifies optimal resolution sampling grid used perform uniform environmental sampling. function requires sf object geometry type “POINT”. Points scores first two axes principal component analysis performed correlation matrix set environmental variables. set candidate resolutions must provided find optimal resolution sampling grid. candidate resolution, optimRes computes metric summarizing average squared Euclidean distance points within cell centroid convex hull built around points. metric compared across different sampling grids increasing resolution (.e., number cells). best resolution selected one allowing finding best trade-number cells average distance among points within cells. words, resolution allowing uniformly sampling environmental space without overfitting . obtained choosing average distance among pseudo-absences reduced 10% (10% default value, another threshold can set user). optimRes returns list length 2 matrix reporting measure computed sampling grid corresponding resolution selected optimal resolution. function also provides plot displaying function values resolution, allowing user select resolution .","code":""},{"path":"~ https://danddr.github.io/USE/reference/optimRes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get optimal resolution of the sampling grid — optimRes","text":"","code":"optimRes(sdf, grid.res, perc.thr = 10, cr = 1, showOpt = TRUE)"},{"path":"~ https://danddr.github.io/USE/reference/optimRes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get optimal resolution of the sampling grid — optimRes","text":"sdf sf object point geometry given PC-scores values grid.res (integer) vector resolutions tested, .e seq(1,100, =1) perc.thr rate change (expressed percentage) function minimized selecting optimal resolution. cr (integer) number cores parallel computing. showOpt (logical) plot result.","code":""},{"path":"~ https://danddr.github.io/USE/reference/optimRes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get optimal resolution of the sampling grid — optimRes","text":"returns list : ) matrix reporting values function minimized, along corresponding resolution; ii) optimal resolution.","code":""},{"path":"~ https://danddr.github.io/USE/reference/paSampling.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling pseudo-absences for the training and testing datasets. — paSampling","title":"Sampling pseudo-absences for the training and testing datasets. — paSampling","text":"paSampling internally calls uniformSampling function, performs uniform sampling environmental space. performing uniform sampling environmental space, environmental space partitioned follows: kernel density estimate species presence observations identifies excludes portion environmental space associated environmental conditions likely suitable species establish using threshold specified user. bandwidth kernel can estimated automatically defined user, allowing account meta-population dynamics (e.g. sink-source populations).","code":""},{"path":"~ https://danddr.github.io/USE/reference/paSampling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling pseudo-absences for the training and testing datasets. — paSampling","text":"","code":"paSampling(   env.rast,   pres = NULL,   thres = 0.75,   H = NULL,   grid.res = NULL,   n.tr = 5,   sub.ts = FALSE,   n.ts = 5,   prev = NULL,   plot_proc = FALSE,   verbose = FALSE )"},{"path":"~ https://danddr.github.io/USE/reference/paSampling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling pseudo-absences for the training and testing datasets. — paSampling","text":"env.rast raster stack raster brick object comprising variables describing environmental space. pres SpatialPointsDataframe including species interest presence-. thres (double) value identifies quantile value used specify boundary kernel density estimate (default thres=0.75 ). Thus, probability values higher threshold indicate portions multivariate space likely associated presence points. #' H kernel bandwidth (.e., width kernel density function defines shape) excluding portion environmental space associated environmental conditions likely suitable species. can either defined user automatically estimated paSampling via ks::Hpi. grid.res (integer) resolution sampling grid. resolution can arbitrarily selected defined using optimRes function. n.tr (integer) number pseudo-absences training dataset sample cell sampling grid sub.ts (logical) sample validation pseudo-absences n.ts (integer; optional) number pseudo-absences testing dataset sample cell sampling grid. sub.ts argument must TRUE. prev (double) prevalence value specified instead n.tr n.ts plot_proc (logical) plot progress sampling, default FALSE verbose (logical) Print verbose","code":""},{"path":"~ https://danddr.github.io/USE/reference/paSampling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sampling pseudo-absences for the training and testing datasets. — paSampling","text":"SpatialPointsDataframe coordinates pseudo-absences geographical environmental space.","code":""},{"path":"~ https://danddr.github.io/USE/reference/uniformSampling.html","id":null,"dir":"Reference","previous_headings":"","what":"Uniform sampling of the environmental space — uniformSampling","title":"Uniform sampling of the environmental space — uniformSampling","text":"uniformSampling performs uniform sampling environmental space. requires sf object geometry type “POINT”. Points scores first two axes principal component analysis performed correlation matrix set environmental variables. resolution sampling grid used systematically collect observations within environmental space must provided. resolution can either set arbitrary value user selected using optimRes() function. uniformSampling allows collecting observations populate training (optional) testing dataset. cases, user must provide number points sampled cell sampling grid (n.tr: points training dataset; n.ts: points testing dataset). Note number pseudo-absences eventually sampled depends spatial configuration points within environmental space. Usually, cells sampling grid empty (.e., include points), points covering whole extent environmental space. reason, number pseudo-absences eventually collected likely lower product resolution sampling grid n.tr(n.ts).","code":""},{"path":"~ https://danddr.github.io/USE/reference/uniformSampling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uniform sampling of the environmental space — uniformSampling","text":"","code":"uniformSampling(   sdf,   grid.res,   n.tr = 5,   n.prev = NULL,   sub.ts = FALSE,   n.ts = 5,   plot_proc = FALSE,   verbose = FALSE )"},{"path":"~ https://danddr.github.io/USE/reference/uniformSampling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uniform sampling of the environmental space — uniformSampling","text":"sdf sf object point geometry given PC-scores values grid.res (integer) resolution sampling grid. resolution can arbitrarily selected defined using optimRes() function. n.tr (integer; optional) number expected points given certain prevalence threshold training dataset. n.prev (double) sample prevalence sub.ts (logical) sample validation points n.ts (integer; optional) number  points testing dataset sample cell sampling grid. sub.ts argument must TRUE. plot_proc (logical) plot progress sampling verbose (logical) Print verbose","code":""},{"path":"~ https://danddr.github.io/USE/reference/uniformSampling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uniform sampling of the environmental space — uniformSampling","text":"spatial point data frame coordinates sampled points geographical environmental space","code":""}]
