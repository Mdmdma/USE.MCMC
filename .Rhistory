x
lines(x)
lines(x)
plot(x)
lines(x)
ylim()
plot(x$interval.average, x$area)
p <- ggplot(x)
p + geom_point()
p <- ggplot(x, aes(x = interval.average, y = area))
p + geom_line()
load_all()
x <- analyseAreaInHigherDim(sf::st_drop_geometry(env.with.pc.fs))
p <- ggplot(x, aes(x = interval.average, y = area))
p + geom_line()
density(sampled.points.uniform.paper[[col]])
?density
stats::density()
stats::density(sampled.points.uniform.paper[[col]])
stats::density(sampled.points.uniform.paper[["PC1"]])
pd <- ggplot(sampled.points.mcmc)
pd <- ggplot(sampled.points.mcmc, aes(x = PC2))
pd + geom_density()
pd <- pd + geom_density()
plotting.dimensions <- c("PC1", "PC2", "PC3", "PC4", "PC5")
# Create individual plots for each PC dimension
individual_plots <- lapply(plotting.dimensions, function(col) {
ggplot() +
geom_density(aes(x = env.with.pc.fs[[col]]), color = "green", size = 1.2) +
geom_density(aes(x = virtual.presence.points.pc[[col]]), color = "black", size = 1.2) +
geom_density(aes(x = sampled.points.uniform.paper[[col]]), color = "orange", size = 1.2) +
geom_density(aes(x = sampled.points.uniform.nn[[col]]), color = "blue", size = 1.2) +
geom_density(aes(x = sampled.points.mcmc[[col]]), color = "red", size = 1.2) +
labs(
title = paste("Density Comparison for", col),
x = "Value",
y = "Density"
) +
theme_minimal() +
theme(
plot.title = element_text(size = 12, face = "bold"),
axis.text = element_text(size = 10),
axis.title = element_text(size = 11),
legend.position = "none"
)
})
# Create shared legend
legend <- get_legend(
ggplot() +
geom_density(aes(x = c(1,2,3), color = "Environment"), size = 1.2) +
geom_density(aes(x = c(1,2,3), color = "Virtual Presence"), size = 1.2) +
geom_density(aes(x = c(1,2,3), color = "Sampled Points Uniform"), size = 1.2) +
geom_density(aes(x = c(1,2,3), color = "Sampled Points Uniform NN"), size = 1.2) +
geom_density(aes(x = c(1,2,3), color = "Sampled Points MCMC"), size = 1.2) +
scale_color_manual(
name = "",
values = c("Environment" = "green",
"Virtual Presence" = "black",
"Sampled Points Uniform" = "orange",
"Sampled Points Uniform NN" = "blue",
"Sampled Points MCMC" = "red")
) +
theme(legend.position = "bottom",
legend.text = element_text(size = 12),
legend.title = element_blank())
)
install.packages("gridExtra")
library(gridExtra)
# Create shared legend
legend <- get_legend(
ggplot() +
geom_density(aes(x = c(1,2,3), color = "Environment"), size = 1.2) +
geom_density(aes(x = c(1,2,3), color = "Virtual Presence"), size = 1.2) +
geom_density(aes(x = c(1,2,3), color = "Sampled Points Uniform"), size = 1.2) +
geom_density(aes(x = c(1,2,3), color = "Sampled Points Uniform NN"), size = 1.2) +
geom_density(aes(x = c(1,2,3), color = "Sampled Points MCMC"), size = 1.2) +
scale_color_manual(
name = "",
values = c("Environment" = "green",
"Virtual Presence" = "black",
"Sampled Points Uniform" = "orange",
"Sampled Points Uniform NN" = "blue",
"Sampled Points MCMC" = "red")
) +
theme(legend.position = "bottom",
legend.text = element_text(size = 12),
legend.title = element_blank())
)
library(cowplot)
# Create shared legend
legend <- get_legend(
ggplot() +
geom_density(aes(x = c(1,2,3), color = "Environment"), size = 1.2) +
geom_density(aes(x = c(1,2,3), color = "Virtual Presence"), size = 1.2) +
geom_density(aes(x = c(1,2,3), color = "Sampled Points Uniform"), size = 1.2) +
geom_density(aes(x = c(1,2,3), color = "Sampled Points Uniform NN"), size = 1.2) +
geom_density(aes(x = c(1,2,3), color = "Sampled Points MCMC"), size = 1.2) +
scale_color_manual(
name = "",
values = c("Environment" = "green",
"Virtual Presence" = "black",
"Sampled Points Uniform" = "orange",
"Sampled Points Uniform NN" = "blue",
"Sampled Points MCMC" = "red")
) +
theme(legend.position = "bottom",
legend.text = element_text(size = 12),
legend.title = element_blank())
)
# Create individual plots for each PC dimension
individual_plots <- lapply(plotting.dimensions, function(col) {
ggplot() +
geom_density(aes(x = env.with.pc.fs[[col]]), color = "green", size = 1.2) +
geom_density(aes(x = virtual.presence.points.pc[[col]]), color = "black", size = 1.2) +
geom_density(aes(x = sampled.points.uniform.paper[[col]]), color = "orange", size = 1.2) +
geom_density(aes(x = sampled.points.uniform.nn[[col]]), color = "blue", size = 1.2) +
geom_density(aes(x = sampled.points.mcmc[[col]]), color = "red", size = 1.2) +
labs(
title = paste("Density Comparison for", col),
x = "Value",
y = "Density"
) +
theme_minimal() +
theme(
plot.title = element_text(size = 12, face = "bold"),
axis.text = element_text(size = 10),
axis.title = element_text(size = 11),
legend.position = "none"
)
})
# Create shared legend
legend <- get_legend(
ggplot() +
geom_density(aes(x = c(1,2,3), color = "Environment"), size = 1.2) +
geom_density(aes(x = c(1,2,3), color = "Virtual Presence"), size = 1.2) +
geom_density(aes(x = c(1,2,3), color = "Sampled Points Uniform"), size = 1.2) +
geom_density(aes(x = c(1,2,3), color = "Sampled Points Uniform NN"), size = 1.2) +
geom_density(aes(x = c(1,2,3), color = "Sampled Points MCMC"), size = 1.2) +
scale_color_manual(
name = "",
values = c("Environment" = "green",
"Virtual Presence" = "black",
"Sampled Points Uniform" = "orange",
"Sampled Points Uniform NN" = "blue",
"Sampled Points MCMC" = "red")
) +
theme(legend.position = "bottom",
legend.text = element_text(size = 12),
legend.title = element_blank())
)
# Arrange plots in grid with legend at bottom
grid.arrange(
arrangeGrob(grobs = individual_plots, ncol = 1),
legend,
heights = c(0.85, 0.15)
)
# Create individual plots for each PC dimension
individual_plots <- lapply(plotting.dimensions, function(col) {
ggplot() +
geom_density(aes(x = env.with.pc.fs[[col]]), color = "green", line.with) +
geom_density(aes(x = virtual.presence.points.pc[[col]]), color = "black", line.with) +
geom_density(aes(x = sampled.points.uniform.paper[[col]]), color = "orange", line.with) +
geom_density(aes(x = sampled.points.uniform.nn[[col]]), color = "blue", line.with) +
geom_density(aes(x = sampled.points.mcmc[[col]]), color = "red", line.with) +
labs(
title = paste("Density Comparison for", col),
x = "Value",
y = "Density"
) +
theme_minimal() +
theme(
plot.title = element_text(size = 12, face = "bold"),
axis.text = element_text(size = 10),
axis.title = element_text(size = 11),
legend.position = "none"
)
})
# Create shared legend
legend <- get_legend(
ggplot() +
geom_density(aes(x = c(1,2,3), color = "Environment"), line.with) +
geom_density(aes(x = c(1,2,3), color = "Virtual Presence"), line.with) +
geom_density(aes(x = c(1,2,3), color = "Sampled Points Uniform"), line.with) +
geom_density(aes(x = c(1,2,3), color = "Sampled Points Uniform NN"), line.with) +
geom_density(aes(x = c(1,2,3), color = "Sampled Points MCMC"), line.with) +
scale_color_manual(
name = "",
values = c("Environment" = "green",
"Virtual Presence" = "black",
"Sampled Points Uniform" = "orange",
"Sampled Points Uniform NN" = "blue",
"Sampled Points MCMC" = "red")
) +
theme(legend.position = "bottom",
legend.text = element_text(size = 12),
legend.title = element_blank())
)
plotting.dimensions <- c("PC1", "PC2", "PC3", "PC4", "PC5")
line.with <- 0.8
# Create individual plots for each PC dimension
individual_plots <- lapply(plotting.dimensions, function(col) {
ggplot() +
geom_density(aes(x = env.with.pc.fs[[col]]), color = "green", line.with) +
geom_density(aes(x = virtual.presence.points.pc[[col]]), color = "black", line.with) +
geom_density(aes(x = sampled.points.uniform.paper[[col]]), color = "orange", line.with) +
geom_density(aes(x = sampled.points.uniform.nn[[col]]), color = "blue", line.with) +
geom_density(aes(x = sampled.points.mcmc[[col]]), color = "red", line.with) +
labs(
title = paste("Density Comparison for", col),
x = "Value",
y = "Density"
) +
theme_minimal() +
theme(
plot.title = element_text(size = 12, face = "bold"),
axis.text = element_text(size = 10),
axis.title = element_text(size = 11),
legend.position = "none"
)
})
line.with <- 0.8
# Create individual plots for each PC dimension
individual_plots <- lapply(plotting.dimensions, function(col) {
ggplot() +
geom_density(aes(x = env.with.pc.fs[[col]]), color = "green", size = line.with) +
geom_density(aes(x = virtual.presence.points.pc[[col]]), color = "black", size = line.with) +
geom_density(aes(x = sampled.points.uniform.paper[[col]]), color = "orange", size = line.with) +
geom_density(aes(x = sampled.points.uniform.nn[[col]]), color = "blue", size = line.with) +
geom_density(aes(x = sampled.points.mcmc[[col]]), color = "red", size = line.with) +
labs(
title = paste("Density Comparison for", col),
x = "Value",
y = "Density"
) +
theme_minimal() +
theme(
plot.title = element_text(size = 12, face = "bold"),
axis.text = element_text(size = 10),
axis.title = element_text(size = 11),
legend.position = "none"
)
})
# Create shared legend
legend <- get_legend(
ggplot() +
geom_density(aes(x = c(1,2,3), color = "Environment"), size = line.with) +
geom_density(aes(x = c(1,2,3), color = "Virtual Presence"), size = line.with) +
geom_density(aes(x = c(1,2,3), color = "Sampled Points Uniform"), size = line.with) +
geom_density(aes(x = c(1,2,3), color = "Sampled Points Uniform NN"), size = line.with) +
geom_density(aes(x = c(1,2,3), color = "Sampled Points MCMC"), size = line.with) +
scale_color_manual(
name = "",
values = c("Environment" = "green",
"Virtual Presence" = "black",
"Sampled Points Uniform" = "orange",
"Sampled Points Uniform NN" = "blue",
"Sampled Points MCMC" = "red")
) +
theme(legend.position = "bottom",
legend.text = element_text(size = 12),
legend.title = element_blank())
)
# Arrange plots in grid with legend at bottom
grid.arrange(
arrangeGrob(grobs = individual_plots, ncol = 1),
legend,
heights = c(0.85, 0.15)
)
# Arrange plots in grid with legend at bottom
grid.arrange(
arrangeGrob(grobs = individual_plots, ncol = 2),
legend,
heights = c(0.85, 0.15)
)
legend
# Create shared legend
legend <- get_legend(
ggplot() +
geom_density(aes(x = c(1,2,3), color = "Environment"), size = line.with) +
geom_density(aes(x = c(1,2,3), color = "Virtual Presence"), size = line.with) +
geom_density(aes(x = c(1,2,3), color = "Sampled Points Uniform"), size = line.with) +
geom_density(aes(x = c(1,2,3), color = "Sampled Points Uniform NN"), size = line.with) +
geom_density(aes(x = c(1,2,3), color = "Sampled Points MCMC"), size = line.with) +
scale_color_manual(
name = "",
values = c("Environment" = "green",
"Virtual Presence" = "black",
"Sampled Points Uniform" = "orange",
"Sampled Points Uniform NN" = "blue",
"Sampled Points MCMC" = "red")
) +
theme(legend.position = "bottom",
legend.text = element_text(size = 12),
legend.title = element_blank())
)
legend
ggplot() +
geom_density(aes(x = c(1,2,3), color = "Environment"), size = line.with) +
geom_density(aes(x = c(1,2,3), color = "Virtual Presence"), size = line.with) +
geom_density(aes(x = c(1,2,3), color = "Sampled Points Uniform"), size = line.with) +
geom_density(aes(x = c(1,2,3), color = "Sampled Points Uniform NN"), size = line.with) +
geom_density(aes(x = c(1,2,3), color = "Sampled Points MCMC"), size = line.with) +
scale_color_manual(
name = "",
values = c("Environment" = "green",
"Virtual Presence" = "black",
"Sampled Points Uniform" = "orange",
"Sampled Points Uniform NN" = "blue",
"Sampled Points MCMC" = "red")
) +
theme(legend.position = "bottom",
legend.text = element_text(size = 12),
legend.title = element_blank())
lp <- ggplot() +
geom_density(aes(x = c(1,2,3), color = "Environment"), size = line.with) +
geom_density(aes(x = c(1,2,3), color = "Virtual Presence"), size = line.with) +
geom_density(aes(x = c(1,2,3), color = "Sampled Points Uniform"), size = line.with) +
geom_density(aes(x = c(1,2,3), color = "Sampled Points Uniform NN"), size = line.with) +
geom_density(aes(x = c(1,2,3), color = "Sampled Points MCMC"), size = line.with) +
scale_color_manual(
name = "",
values = c("Environment" = "green",
"Virtual Presence" = "black",
"Sampled Points Uniform" = "orange",
"Sampled Points Uniform NN" = "blue",
"Sampled Points MCMC" = "red")
) +
theme(legend.position = "bottom",
legend.text = element_text(size = 12),
legend.title = element_blank())
lp
get_legend(lp)
get_legend(lp, return_all = TRUE)
get_legend(lp, return_all = TRUE)
lp
View(lp)
# Arrange plots in grid with legend at bottom
grid.arrange(
arrangeGrob(grobs = individual_plots, ncol = 2),
legend,
heights = c(0.85, 0.15)
)
legend <- get_legend(
ggplot() +
geom_point(aes(x = NA, y = NA, color = "Environment"), size = 0) +
geom_point(aes(x = NA, y = NA, color = "Virtual Presence"), size = 0) +
geom_point(aes(x = NA, y = NA, color = "Sampled Points Uniform"), size = 0) +
geom_point(aes(x = NA, y = NA, color = "Sampled Points Uniform NN"), size = 0) +
geom_point(aes(x = NA, y = NA, color = "Sampled Points MCMC"), size = 0) +
scale_color_manual(
name = "",
values = c("Environment" = "green",
"Virtual Presence" = "black",
"Sampled Points Uniform" = "orange",
"Sampled Points Uniform NN" = "blue",
"Sampled Points MCMC" = "red")
) +
theme(legend.position = "bottom",
legend.text = element_text(size = 12),
legend.title = element_blank()) +
guides(color = guide_legend(override.aes = list(size = 3, alpha = 1)))
)
legend <- get_legend(
ggplot() +
geom_point(aes(x = NA, y = NA, color = "Environment"), size = 0, show.legend = TRUE) +
geom_point(aes(x = NA, y = NA, color = "Virtual Presence"), size = 0, show.legend = TRUE) +
geom_point(aes(x = NA, y = NA, color = "Sampled Points Uniform"), size = 0, show.legend = TRUE) +
geom_point(aes(x = NA, y = NA, color = "Sampled Points Uniform NN"), size = 0, show.legend = TRUE) +
geom_point(aes(x = NA, y = NA, color = "Sampled Points MCMC"), size = 0, show.legend = TRUE) +
scale_color_manual(
name = "",
values = c("Environment" = "green",
"Virtual Presence" = "black",
"Sampled Points Uniform" = "orange",
"Sampled Points Uniform NN" = "blue",
"Sampled Points MCMC" = "red")
) +
theme_void() +
theme(legend.position = "bottom",
legend.text = element_text(size = 12),
legend.title = element_blank()) +
guides(color = guide_legend(override.aes = list(size = 3, alpha = 1)))
)
legend_data <- data.frame(
x = rep(0, 5),
y = 1:5,
category = factor(c("Environment", "Virtual Presence", "Sampled Points Uniform",
"Sampled Points Uniform NN", "Sampled Points MCMC"),
levels = c("Environment", "Virtual Presence", "Sampled Points Uniform",
"Sampled Points Uniform NN", "Sampled Points MCMC"))
)
legend <- get_legend(
ggplot(legend_data, aes(x = x, y = y, color = category)) +
geom_point(alpha = 0) +  # invisible points
scale_color_manual(
name = "",
values = c("Environment" = "green",
"Virtual Presence" = "black",
"Sampled Points Uniform" = "orange",
"Sampled Points Uniform NN" = "blue",
"Sampled Points MCMC" = "red")
) +
theme_void() +
theme(legend.position = "bottom",
legend.text = element_text(size = 12),
legend.title = element_blank()) +
guides(color = guide_legend(override.aes = list(size = 3, alpha = 1)))
)
# Create shared legend
legend <- get_legend(
ggplot() +
geom_density(aes(x = c(1,2,3), color = "Environment"), size = line.with) +
geom_density(aes(x = c(1,2,3), color = "Virtual Presence"), size = line.with) +
geom_density(aes(x = c(1,2,3), color = "Sampled Points Uniform"), size = line.with) +
geom_density(aes(x = c(1,2,3), color = "Sampled Points Uniform NN"), size = line.with) +
geom_density(aes(x = c(1,2,3), color = "Sampled Points MCMC"), size = line.with) +
scale_color_manual(
name = "",
values = c("Environment" = "green",
"Virtual Presence" = "black",
"Sampled Points Uniform" = "orange",
"Sampled Points Uniform NN" = "blue",
"Sampled Points MCMC" = "red")
) +
theme(legend.position = "bottom",
legend.text = element_text(size = 12),
legend.title = element_blank())
)
# Create shared legend
legend <- get_legend(
plot <- ggplot() +
geom_density(aes(x = c(1,2,3), color = "Environment"), size = line.with) +
geom_density(aes(x = c(1,2,3), color = "Virtual Presence"), size = line.with) +
geom_density(aes(x = c(1,2,3), color = "Sampled Points Uniform"), size = line.with) +
geom_density(aes(x = c(1,2,3), color = "Sampled Points Uniform NN"), size = line.with) +
geom_density(aes(x = c(1,2,3), color = "Sampled Points MCMC"), size = line.with) +
scale_color_manual(
name = "",
values = c("Environment" = "green",
"Virtual Presence" = "black",
"Sampled Points Uniform" = "orange",
"Sampled Points Uniform NN" = "blue",
"Sampled Points MCMC" = "red")
) +
theme(legend.position = "bottom",
legend.text = element_text(size = 12),
legend.title = element_blank())
)
plot()
plot
get_legend(plot)
get_legend(plot = plot)
get_plot_component(plot = plot)
?get_plot_component
get_plot_component(plot = plot, return_all = TRUE)
get_plot_component(plot = plot, pattern = legend, return_all = TRUE)
legend <- get_plot_component(plot = plot, pattern = legend, return_all = TRUE)
legend
legend
View(plot)
get_legend
legend <- get_plot_component(plot = plot, pattern = "guide-box", return_all = TRUE)
legend
View(legend)
View(plot)
plot(legend)
typeof(legend)
typeof(legend[3])
typeof(legend[3
])
library(cowplot)
legend <- cowplot::get_legend(
ggplot(data.frame(x = 1:5, y = 1:5,
group = c("Environment", "Virtual Presence", "Sampled Points Uniform",
"Sampled Points Uniform NN", "Sampled Points MCMC"))) +
geom_point(aes(x = x, y = y, color = group), size = 0) +
scale_color_manual(
name = "",
values = c("Environment" = "green",
"Virtual Presence" = "black",
"Sampled Points Uniform" = "orange",
"Sampled Points Uniform NN" = "blue",
"Sampled Points MCMC" = "red")
) +
theme(legend.position = "bottom",
legend.text = element_text(size = 12),
legend.title = element_blank())
)
legend
legend <- get_plot_component(plot = plot, pattern = "guide-box", return_all = TRUE)
legend[3]
View(legend)
library(ggplot2)
library(cowplot)
# Create a sample plot with a legend
p1 <- ggplot(mtcars, aes(x = wt, y = mpg, color = factor(cyl))) +
geom_point() +
theme_minimal()
# Extract the legend
legend <- get_legend(p1)
# Create another plot (for example purposes)
p2 <- ggplot(mtcars, aes(x = hp, y = mpg, color = factor(cyl))) +
geom_point() +
theme_minimal() +
theme(legend.position = "none")  # Hide legend in second plot
# Hide legend in first plot as well (if needed)
p1_nolegend <- p1 + theme(legend.position = "none")
# Combine plots (e.g., side-by-side), then add the legend at the bottom
combined <- plot_grid(p1_nolegend, p2, ncol = 2, align = "hv")
final_plot <- plot_grid(combined, legend, ncol = 1, rel_heights = c(1, 0.1))
# Show the final plot
print(final_plot)
