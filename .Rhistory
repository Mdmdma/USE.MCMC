library(sf)
library(tidyverse)
library(readxl)
library(geoLivestockFAO)
bra<-st_read("/home/ddare/Downloads/data_daniele_check/BRAL2_02.shp")
bra_livpop<-read_xls("/home/ddare/Downloads/data_daniele_check/BRAL2_02_LIVPOP5.XLS", sheet="dataset")
test1=geoLivestockFAO::global_merge_table(dirfolder="/home/ddare/working_files/GLW_TS/fao_query/FAO/", # directory al database FAO
FAOtable="/home/ddare/working_files/GLW_TS/fao_query/FAO/fao_livestock_crossTable.xlsx", #full crosstable path
species="CTAL",
years=2000,
ISO3= "AZE")
test1=geoLivestockFAO::global_merge_table(dirfolder="/home/ddare/working_files/GLW_TS/fao_query/FAO/", # directory al database FAO
FAOtable="/home/ddare/working_files/GLW_TS/fao_query/FAO/fao_livestock_crossTable.xlsx", #full crosstable path
species="CTAL",
years=2019,
ISO3= "BRA")
test1
View(test1)
test2=geoLivestockFAO::global_merge_spatial(global_table = test1,
years = 2019)
#checking....
library(geoLivestockFAO)
test1=geoLivestockFAO::global_merge_table(dirfolder="/home/ddare/working_files/GLW_TS/fao_query/FAO/", # directory al database FAO
FAOtable="/home/ddare/working_files/GLW_TS/fao_query/FAO/fao_livestock_crossTable.xlsx", #full crosstable path
species="CTAL",
years=2000:2020,
ISO3= c("AZE", "ETH", "DEU", "BOL"))
test1 %>%
filter(ISO3=="BOL")
x<-test1 %>%
filter(ISO3=="BOL")
View(x)
x<-test1 %>%
filter(ISO3=="AZE")
View(x)
x<-test1 %>%
filter(ISO3=="ETH")
View(x)
x<-test1 %>%
filter(ISO3=="DEU")
View(x)
x<-test1 %>%
filter(ISO3=="BOL")
View(x)
#spatial join
test2=geoLivestockFAO::global_merge_spatial(global_table = test1,
years = c(2000:2020))
test2$`2002`
test1=geoLivestockFAO::global_merge_table(dirfolder="/home/ddare/working_files/GLW_TS/fao_query/FAO/", # directory al database FAO
FAOtable="/home/ddare/working_files/GLW_TS/fao_query/FAO/fao_livestock_crossTable.xlsx", #full crosstable path
species="CTAL",
years=2002, #2000:2020
ISO3= c("ETH"))#"AZE", "ETH", "DEU", "BOL", "BRA"
test1
#spatial join
debug(global_merge_spatial)
test2=geoLivestockFAO::global_merge_spatial(global_table = test1,
years = c(2002))
#spatial join
debug(global_merge_spatial)
test2=geoLivestockFAO::global_merge_spatial(global_table = test1,
years = c(2002))
tmp
tmp = tmp %>% dplyr::select(YEAR, FAO_CODE, GAUL_CODE,
ISO3, ADM0_NAME, PARENT, CODE, NAME, LEVEL, SPECIES,
N0, AREA, DENSITY, SOURCE, REFERENCE, geom_path,
geometry)
suppressWarnings(for (r in 1:nrow(tmp)) {
if (is.na(tmp[r, "REFERENCE"])[, 1]) {
tmp[r, "REFERENCE"] <- unique(tmp$REFERENCE)[1]
tmp[r, "SOURCE"] <- unique(tmp$SOURCE)[1]
}
})
#------USE-----------------
setwd("/home/ddare/GitHub/USE/")
# token "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"
library(devtools)
library(roxygen2)
library(usethat)
# devtools::create("yourPkg")
# devtools::install_github("mattmar/dynamAedes")
devtools::load_all(".") # Working directory should be in the package directory
# devtools::create("yourPkg")
# devtools::install_github("mattmar/dynamAedes")
devtools::load_all(".") # Working directory should be in the package directory
#------USE-----------------
setwd("/home/ddare/GitHub/USE/")
# devtools::create("yourPkg")
# devtools::install_github("mattmar/dynamAedes")
devtools::load_all(".") # Working directory should be in the package directory
#update documentation
devtools::document()
#update documentation
devtools::document()
# token "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"
library(devtools)
library(roxygen2)
library(usethat)
# devtools::create("yourPkg")
# devtools::install_github("mattmar/dynamAedes")
devtools::load_all(".") # Working directory should be in the package directory
#update documentation
devtools::document()
#install package
devtools::install(".")
library(spelling)
spell_check()
spell_check()
spell_check()
spell_check()
# devtools::create("yourPkg")
# devtools::install_github("mattmar/dynamAedes")
devtools::load_all(".") # Working directory should be in the package directory
#update documentation
devtools::document()
spell_check()
# devtools::create("yourPkg")
# devtools::install_github("mattmar/dynamAedes")
devtools::load_all(".") # Working directory should be in the package directory
#update documentation
devtools::document()
spell_check()
#create vignette
usethis::use_vignette("USE_vignette")
#check everything is ok for the CRAN
check()
# devtools::create("yourPkg")
# devtools::install_github("mattmar/dynamAedes")
devtools::load_all(".") # Working directory should be in the package directory
#update documentation
devtools::document()
#check everything is ok for the CRAN
check()
